# Coding style

* Use shellcheck on shell scripts.


# Tagging

Example tagging stimages-0.0.6:

    $ export T=stimages-0.0.6; git tag -sam $T $T && git push && git push --tags

# Create new stimages tag meant for inclusion on docs.sto in an upcoming st collection release
- export XYZ=<stimages version to tag, e.g., 0.1.3>
- git branch releng-$XYZ; git switch releng-$XYZ
- bump stmgr version (use same version as in the stmgr component release)
  - .gitlab-ci.yml
  - build-stimage
  - build-stmgr
  - contrib/stboot/build-stboot
  - test/getting-started.sh
- bump stboot version (use the same version as in the stboot component release)
  - contrib/stboot/build-stboot
- make sure that project/docs refers to appropriate versions
  - project/docs/content/docs/introduction/quickstart.md: PATH for downloading stboot contains releases/X.Y.Z
    - Note: here X.Y.Z should match the st collection release version you will be creating
  - project/docs/content/docs/introduction/build.md: fix all references to stimages-X.Y.Z (there are many)
    - Note: here X.Y.Z refers to $XYZ
  - project/docs/content/docs/introduction/build.md: update the stmgr version in the go install command
- synchronize test/getting-started.sh and project/docs/content/docs/introduction/build.md
- Test that getting started script works (and hence the build guide should be working)
  - Option 1 (podman):
    - podman run -it --rm -v "$PWD:/c" -e STIMAGESVER=releng-$XYZ debian:bookworm-backports /c/test/getting-started.sh
  - Option 2 (fresh Debian stable system)
    - env QEMU_RAM=8G make distclean boot
      root
      myrootpassword
      systemctl start systemd-networkd
      apt update; apt install -y git
      useradd -G sudo -d /dev/shm -s /bin/bash build
      passwd build
      sudo -iu build
      mkdir tmp
      git clone -b releng-$XYZ https://git.glasklar.is/system-transparency/core/stimages.git
      cd stimages
      TMPDIR=$HOME/tmp test/getting-started.sh releng-$XYZ
- trigger CI/CD job
  - git push origin
  - NOTE: job boot-example times out without this being a real problem with the produced images, cf. https://git.glasklar.is/system-transparency/core/stimages/-/issues/11
- try using stimages branch releng-$XYZ in qa-images
  - pushd /path/to/project/qa-images; git branch stimages-$XYZ; git switch stimages-$XYZ
  - $EDITOR .gitlab-ci.yml: check that an appropriate Go version is used, bump if necessary
  - $EDITOR .gitlab-ci.yml: set STIMAGES_VERSION to releng-$XYZ
  - $EDITOR .gitlab-ci.yml: set STMGR_VERSION to target stmgr version
  - trigger CI/CD job
    - git push origin
	- wait for pipeline to pass
  - popd
- qa-images: merge to main in order to trigger updates to st.glasklar.is/st/qa/
  - Expect qa-debian-bookworm-amd64.{json,zip} to be updated within ~5 mintues
  - Troubleshooting: the periodic signing after merge to main happens from sign-01.gtse every 5 minutes
- Download .iso and .uki from the passing pipeline
  - Test that .iso works in QEMU as described in project/docs/content/docs/introduction/quickstart.md
  - Test that .uki works from USB stick on stime when prepared as described in project/docs/content/docs/introduction/quickstart.md
  - Test that .iso works via BMC on stime based on what's described in project/docs/content/docs/introduction/quickstart.md
- Sign .iso and .uki with your release TKey
  - Rename stboot.iso as qa-stboot-amd64.iso, then sign as .sig
  - Rename stboot.uki as qa-stboot-amd64.uki, then sign as .sig
  - Ensure these signatures are valid
    - Hint: https://www.system-transparency.org/keys
      ssh-keygen -Y verify -f allowed-ST-release-signers -I releases@system-transparency.org -n file -s qa-stboot-amd64.iso.sig < qa-stboot-amd64.iso
      ssh-keygen -Y verify -f allowed-ST-release-signers -I releases@system-transparency.org -n file -s qa-stboot-amd64.uki.sig < qa-stboot-amd64.uki
- Manually publish the signed .iso and .uki files on https://st.glasklar.is/st/qa/
  - Hint: listen.so, /var/www/st.glasklar.is/st/qa
  - Create new directory releases/st-X.Y.Z, where X.Y.Z is the st collection release you will be creating
  - Upload .iso, .iso.sig, .uki, .uki.sig into this directory
- Merge stimages branch to main
- Push signed stimages tag (similar to how we're signing other component releases)
- Bump so that qa-images uses the new stimages tag instead of the releng branch
  - This is not strictly needed, but it is a cleaner way to leave things.
  - Note: to also get images published in the qa-images package registry a tag
    in the qa-images repository is needed.  We don't create such tags right now
    because no-one is pulling those images anyway.
