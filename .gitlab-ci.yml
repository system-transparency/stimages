variables:
  STMGR_VERSION: latest

stages:
  - build/1
  - build/2
  - boot

build-example-os:
  stage: build/1
  tags:
    - longrunning
  image: debian:bookworm
  before_script:
    - apt-get -qq update
    - apt-get install -qqy golang-1.19-go ca-certificates pigz make cpio sudo mmdebstrap
    - |
      export GOBIN="${PWD}"/.go/bin; mkdir -p "$GOBIN"
      export PATH="${PATH}":/usr/lib/go-1.19/bin:"${GOBIN}"
    - go install system-transparency.org/stmgr@"${STMGR_VERSION}"
  script:
    - echo stimages > config/example/pw.root # Default root password in OS image
    - make stimage
    - cat /dev/null > keys/key.pem     # Don't publish keys
    - cat /dev/null > keys/rootkey.pem # Don't publish keys
  artifacts:
    paths:
      - build/stimage.*
      - keys/

build-stboot:
  stage: build/2
  image: debian:bookworm
  before_script:
    - apt-get -qq update
    - apt-get install -qqy golang-1.19-go ca-certificates pigz make cpio
    - |
      export GOBIN="${PWD}"/.go/bin; mkdir -p "$GOBIN"
      export PATH="${PATH}":/usr/lib/go-1.19/bin:"${GOBIN}"
    - go install system-transparency.org/stmgr@"${STMGR_VERSION}"
  script:
    - make stboot
  artifacts:
    paths:
      - build/stboot.*

# Disabled -- stboot is failing when downloading os image
# TODO: Use qemu from bookworm-backports and -nic guestfwd=
.boot-example:
  stage: boot
  tags:
    - longrunning
  image: debian:bookworm
  before_script:
    - apt-get -qq update
    - apt-get install -qqy make qemu-system-x86 ovmf ncat
  script:
    - cp /usr/share/OVMF/OVMF_VARS.fd guest_nvram
    - (for e in json zip; do nc -lc "echo -e 'HTTP/1.1 200 OK\n'; cat build/stimage.$e" 0.0.0.0 8080; done) &
    - test/boot.sh ./boot-qemu.sh build/stboot.iso guest_nvram
  artifacts:
    when: always
    paths:
      - qemu.log
      - guest_nvram
